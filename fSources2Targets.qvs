/*********************************************************************
Application: fSource2Targets.qvs
Version: 1.0
Author: jmbenedetto
Date created: 2022-09-06
Date last modified:
Description: This sub gets a P_PARAM_TABLE containinig at least 2 fields:
        P_SOURCE_FIELD e P_TARGET_FIELD. For each row, the sub will read
        P_SOURCE_FIELD as an internal table and store it as P_TARGET_FIELD.
        P_SOURCE_FIELD and P_TARGET_FIELD must be complete paths, including
        also file name and file extension (csv or qvd). The script will
        follow the extension on each field to determine the file type
        (origin and destination).
***********************************************************************/


SUB fSource2Target(P_SOURCE,P_SOURCE_TYPE,P_TARGET,P_TARGET_TYPE)
    // Uses the storage function to copy a data file from
    // one data connection to another.
    // The file type will be determined by its extension,
    // both source and target.


    TRACE ##################################################;
    TRACE ## Starting Function : Source2Target  ##;
    TRACE ## Copying : $(P_SOURCE) #;
    TRACE ##################################################;

    [Source]:
        LOAD *
        FROM [$(P_SOURCE)] ($(P_SOURCE_TYPE));
    STORE [Source] INTO [$(P_TARGET)] ($(P_TARGET_TYPE));
    DROP TABLE [Source];
        
    TRACE ##################################################;
    TRACE # Field successfully copied into: $(P_TARGET) #;
    TRACE ##################################################;

END SUB

SUB fSources2Targets(P_PARAM_TABLE, P_SOURCE_FIELD,P_TARGET_FIELD)

    TRACE ##################################################;
    TRACE ## Starting Function : Sources2Targets  ##;
    TRACE ##################################################;

    [Parameters]:
    LOAD
        IF(RIGHT($(P_SOURCE_FIELD),3)='qvd','qvd','txt') as SourceType,
        IF(RIGHT($(P_TARGET_FIELD),3)='qvd','qvd','txt')  as TargetType,
        $(P_SOURCE_FIELD) as SourceParam,
        $(P_TARGET_FIELD) as TargetParam
    RESIDENT [$(P_PARAM_TABLE)]
    ;

    FOR i = 0 TO NoOfRows('Parameters') - 1
        LET vSource = peek('SourceParam', $(i), 'Parameters');
        LET vTarget = peek('TargetParam', $(i), 'Parameters');
        LET vSourceType = peek('SourceType', $(i), 'Parameters');
        LET vTargetType = peek('TargetType', $(i), 'Parameters');
        CALL fSource2Target(vSource,vSourceType,vTarget,vTargetType);
    NEXT i

END SUB